{"ast":null,"code":"const handleSubmit = async event => {\n  event.preventDefault();\n  if (validateForm()) {\n    try {\n      const response = await fetch('http://127.0.0.1:5000/submit', {\n        // Ensure the URL is correct\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({\n          name,\n          email,\n          message\n        })\n      });\n      const result = await response.json();\n      setSuccessMessage(result.message);\n    } catch (error) {\n      console.error('Error submitting the form:', error);\n    }\n  }\n};","map":{"version":3,"names":["handleSubmit","event","preventDefault","validateForm","response","fetch","method","headers","body","JSON","stringify","name","email","message","result","json","setSuccessMessage","error","console"],"sources":["C:/Users/HP/codsoft/frontend/src/Components/Contact.js"],"sourcesContent":["const handleSubmit = async (event) => {\r\n  event.preventDefault();\r\n  if (validateForm()) {\r\n    try {\r\n      const response = await fetch('http://127.0.0.1:5000/submit', {  // Ensure the URL is correct\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({ name, email, message }),\r\n      });\r\n      const result = await response.json();\r\n      setSuccessMessage(result.message);\r\n    } catch (error) {\r\n      console.error('Error submitting the form:', error);\r\n    }\r\n  }\r\n};\r\n"],"mappings":"AAAA,MAAMA,YAAY,GAAG,MAAOC,KAAK,IAAK;EACpCA,KAAK,CAACC,cAAc,CAAC,CAAC;EACtB,IAAIC,YAAY,CAAC,CAAC,EAAE;IAClB,IAAI;MACF,MAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAC,8BAA8B,EAAE;QAAG;QAC9DC,MAAM,EAAE,MAAM;QACdC,OAAO,EAAE;UACP,cAAc,EAAE;QAClB,CAAC;QACDC,IAAI,EAAEC,IAAI,CAACC,SAAS,CAAC;UAAEC,IAAI;UAAEC,KAAK;UAAEC;QAAQ,CAAC;MAC/C,CAAC,CAAC;MACF,MAAMC,MAAM,GAAG,MAAMV,QAAQ,CAACW,IAAI,CAAC,CAAC;MACpCC,iBAAiB,CAACF,MAAM,CAACD,OAAO,CAAC;IACnC,CAAC,CAAC,OAAOI,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,4BAA4B,EAAEA,KAAK,CAAC;IACpD;EACF;AACF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}